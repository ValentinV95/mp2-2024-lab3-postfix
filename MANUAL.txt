Инструкция по программе "Вычисление арифметических выражений".

Общие сведения:
	
	После запуска программы можно будет ввести математическое выражение в одну строку. 
	Можно использовать только символы английского алфавита любого регистра, а также (без кавычек и запятых - они запрещены) 	'_','-','+','*','/','(',')',' ' и цифры от 0 до 9
	Расстановка пробелов (табуляция запрещена) не важна, если это конечно, не приводит к полному объединению двух лексем одной 	категории.
	Пример:
		Можно писать так (без кавычек): "2    4 sin   ( 8798+8       )"
		Но нельзя для выражения "2 4" записать "24", это приведет к ответу 24, а не 8
	При игнорировании критических ограничений (например на запрет символов) программа выдаст исключение с надписью и положением ошибки в 	выражении и завершит выполнение.

Бинарные операции:
	Бинарные операции обязаны иметь левый и правый операнд.
	Например:
		Допускается "2 + 3 * 4"
		Запрещено "2 + 3 * " - у умножения нет правого операнда
		Запрещено " + 3 * 4" - У сложения нет левого операнда
	Данные ограничения распространяются на операции умножения, деления, сложения, бинарную разность, при отсутствии левого операнда у 	операции разности, данная операция преобразуется в унарную.
		Например:
			Бинарная разность: "2 - 5"
			Выдаст ошибку: "2 - "
			Преобразуется в унарный минус: " - 5"
Запись чисел:
	Хранение чисел происходит в типе double, поэтому последующие термины "целое число", "не целое число" относятся только к 	логическому ожиданию с точки зрения математики.
	
	Целое число:
		Запись целого числа возможна:
			Целым числом:
				" 1232 " - целое число 1232
			Целое число умноженное на 10 в степени:
				" 1232e+10 " или " 1232E+10 " - преобразуется в 1232*(10^10)
			Целое число деленное на 10 в степени.
				В определенных случаях результат не является целым числом:
					"1230e-1" или "1230e-1" результат целое число 123, запись преобразуется в 1230/(10^1)
					"1233e-1" или "1233e-1" результат не целое число 123.3, запись преобразуется в 1233/(10^1)
	Корректная запись части числа с e или E:
		В записи числа может присутствовать только одно 'e' или 'E', что значит умножить на 10 в степени. Для определенности в 			дальше примерах	используется 'e'.
		Например:
			Корректно: "2e+21"
			Ошибка: "2ee+21" - преобразуется в запись "2 * ee + 21", подробнее смотреть в "сокращенная запись операций".
		После e обязательно должен идти только один знак '+' или '-', унарный минус в общем случае не допускается при записи 			степени.
		Пример:
			Корректно: "2e+21"
			Корректно: "2e-21"
			Ошибка: "2e++44"
			Ошибка: "2e+-44" - в данном случае преобразуется к виду "2 * e + -44", подробнее смотреть в "сокращенная запись 					операций"
			Ошибка:	"2e3" - преобразуется к "2 * e3"
			Ошибка: "2e*44" - в данном случае преобразуется к виду "2 * e * 44".
			Ошибка: "2e--44" - преобразуется к виду "2 * e - -44"
		Степень числа может записываться только целым числом, состоящим только из цифр.
		Например:
			Корректно: "2e+12"
			Ошибка: "2e+1.2" - преобразуется к виду "2 * e + 1.2", подробнее смотреть в "сокращенная запись операций"
			Ошибка: "2e+1e+2" - преобразуется к виду "'2e+1' * e + 2", подробнее смотреть в "сокращенная запись операций"
			Ошибка: "2e+s" - преобразуется к виду "2 * e + s"
	Не целое число:
		Запись не целого числа содержит только одну точку и любое (в рамках системы) количество цифр. После точки обязательно 			должна быть цифра, перед точкой не обязательно. После точки после цифры можно использовать 'e' по правилам выше.
		Пример:
			Корректно: "1.2"
			Корректно: ".2" - считается как 0.2
			Ошибка: "1."
			Ошибка: "1.e"
			Ошибка: "1.r"
			Ошибка: "w.1"
			Корректно: ".3e+3"
			Ошибка: ".3e3"
Переменные:
	Можно вводить любые переменные английскими буквами с нижними подчеркиваниями и цифрами, цифры не могут идти на первом месте.
	Пример:
		Корректно: "val"
		Ошибка: "v.al"
		Ошибка: "3al" - преобразуется в 3 * al
		Корректно: "al_33_gg_2"
Математические константы:
	Можно пользоваться числом 'e'=2.7..., и числом 'pi'=3.14...
	Для их использования достаточно ввести их в выражение и ответить 'y' на задаваемый программой вопрос.
	Пример:
		Корректно: "1 + 3 - pi*2 + e"

Использование скобок:
	Выражение должно иметь правильную скобочную последовательность. Не допускается использование пустых скобок '()'. Скобки меняют приоритет операций, а также обозначают вызов функции(смотреть раздел функции). Скобки могут быть вложенными.

Унарный минус:
	Минус считается унарным когда имеет только правый операнд. Правый операнд иметь обязан.

Функции:
	Доступны 5 функций: 'sin','cos','tan','cot', 'exp'. После ключевого слова обязана идти '(' (можно через несколько пробелов (в desmos 	работает)).
	Пример:
		Корректно: "sin(cos(tan(23)))"
		Корректно: "sin    (cos(3))"
		Ошибка: "sin 23" - преобразуется к "sin * 23", где sin считается пользовательской переменной.
		Ошибка: "sin2" - преобразуется к "sin2", где sin2 считается переменной.

Сокращенная запись операций:
	Можно не писать умножение между числами, переменными, скобками, функциями
		В случае число * число можно писать через пробел: "2 2" будет как 2 * 2
		В случае число * переменная можно слитно или через пробел: "23f" будет как 23*f
		В случае переменная * число можно писать через пробел: "f 2" будет f * 2, "f2" преобразуется в переменную f2
		В случае число * функция можно писать слитно или через пробел: "2sin(x)" будет 2 * sin(x)
		В случае функция * число можно писать слитно или через пробел: "sin(x)2" будет sin(x) * 2
		В случае закрывающая скобка -> число можно писать слитно или через пробел: "(2)3" будет как (2)*3
		В случае число -> открывающая скобка можно писать слитно или через пробел: "2(3)" будет как 2*(3)
		В случае переменная -> открывающая скобка можно писать пробел или слитно: "a(4)" будет как a*(4)
		В случае закрывающая скобка -> переменная можно писать пробел или слитно: "(4)a" будет как (4)*a
		В случае "...)(..." будет преобразовано к "...) * (...)".
		В случае функция * функция можно писать слитно или через пробел: "sin(x)cos(x)" будет как "sin(x) * cos(x)"
		функция->отк скобка и зак скобка->функция совпадает с поведением переменной<>скобка
		Функция * переменная можно слитно или через пробел, переменная * функция через пробел: "a sin(x)" и "sin(x)a"
		Переменная * переменная можно через пробел: "a a" будет a * a.
